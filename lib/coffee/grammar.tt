grammar Coffee

  rule code
    space statement newline* <Code> {
      def value
        statement
      end
    }
  end

  rule statement
    builtins /
    expression
  end

  rule expression
    space addition space <Expression> {
      def value
        addition
      end
    }
  end

  rule builtins
    'print' space expression <Print> /
    'print' '(' expression ')' <Print>
  end

  rule addition
    multiplication space '+' space addition <Addition> /
    multiplication space '-' space addition <Subtraction> /
    multiplication
  end

  rule multiplication
    primary space '*' space multiplication <Multiplication> /
    primary space '/' space multiplication <Division> /
    primary space '%' space multiplication <Modulo> /
    primary
  end

  rule primary
    '(' space expression space ')' <Expression> {
      def value
        expression
      end
    } /
    number
  end

  rule number
    [0-9]+ <Number>
  end

  rule space
    [ \t]*
  end

  rule newline
    space ("\r\n"+ / [\r\n]+ / ";") space
  end

end
